<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.BlogObjMapper">
  <resultMap id="BaseResultMap" type="cn.aaron.ablog.obj.BlogObj">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="tags" jdbcType="VARCHAR" property="tags" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, title, tags, created_time, updated_time
  </sql>
  <select id="getByPK" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select   <include refid="Base_Column_List" />
    from t_blog
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="getByPKWithContent" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select   <include refid="Base_Column_List" />,content
    from t_blog
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="find" parameterType="map" resultMap="BaseResultMap">
    select   <include refid="Base_Column_List" />
    from t_blog
    <where>
        <include refid="base.dynamicWhere"></include>
    </where>
    <include refid="base.pageSql"></include>
  </select>
  
  <select id="findWithContent" parameterType="map" resultMap="BaseResultMap">
    select   <include refid="Base_Column_List" />,content
    from t_blog
    <where>
        <include refid="base.dynamicWhere"></include>
    </where>
    <include refid="base.pageSql"></include>
  </select>
  
  <select id="findCount" resultType="long">
    select count(id) from t_blog
  </select>
  
  <select id="findStatistics" parameterType="map" resultType="cn.aaron.ablog.obj.BlogStatisticsObj">
    select blog_id,view_count,comment_count from t_blog_statistics
    <where>
        blog_id in(
        <foreach collection="blogIds" item="id" separator=",">
        #{id}
        </foreach>
        )
    </where>
  </select>
  
  <update id="updateViewStatistics" parameterType="map">
    update t_blog_statistics set view_count=view_count+#{viewCount} where blog_id=#{blogId}
  </update>
  <update id="updateCommentStatistics" parameterType="map">
    update t_blog_statistics set comment_count=comment_count+#{commentCount} where blog_id=#{blogId}
  </update>
  
  <delete id="delete" parameterType="java.lang.Long">
    delete from t_blog
    where id = #{id,jdbcType=BIGINT}
  </delete>
  
  <insert id="insertStatistics" parameterType="cn.aaron.ablog.obj.BlogStatisticsObj">
    insert into t_blog_statistics (blog_id, view_count, comment_count)
    values (#{blogId,jdbcType=BIGINT}, #{viewCount,jdbcType=BIGINT}, #{commentCount,jdbcType=BIGINT})
  </insert>
  
  <insert id="insert" parameterType="cn.aaron.ablog.obj.BlogObj" useGeneratedKeys="true"  keyProperty="id">
    insert into t_blog (id, title, tags,created_time, updated_time, content)
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{tags,jdbcType=VARCHAR}, 
      #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  
  <update id="updateWithContent" parameterType="cn.aaron.ablog.obj.BlogObj">
    update t_blog
    set title = #{title,jdbcType=VARCHAR},
      tags = #{tags,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="update" parameterType="cn.aaron.ablog.obj.BlogObj">
    update t_blog
    set title = #{title,jdbcType=VARCHAR},
      tags = #{tags,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>